
SELECT a.first_name, a.last_name 
FROM actor a;

SELECT f.title 
FROM film f;

SELECT city FROM city;

SELECT c.name 
FROM category c 
JOIN film_category fc ON c.category_id = fc.category_id;

SELECT first_name, last_name FROM customer;

SELECT f.title, f.release_year
FROM film f
WHERE f.release_year = 2006;

SELECT a.actor_id, a.first_name, a.last_name 
FROM actor a 
WHERE a.last_name ILIKE '%Smith%';

SELECT s.store_id, s.address_id, c.city, co.country
FROM store s
JOIN address a ON s.address_id = a.address_id
JOIN city c ON a.city_id = c.city_id
JOIN country co ON c.country_id = co.country_id
WHERE co.country ILIKE 'India';

SELECT f.title, f.rental_rate
FROM film f
WHERE f.rental_rate > 2.99;

SELECT c.name, COUNT(f.film_id) 
FROM film_category fc 
JOIN film f ON fc.film_id = f.film_id 
JOIN category c ON fc.category_id = c.category_id 
GROUP BY c.name 
ORDER BY COUNT(f.film_id) DESC;

SELECT COUNT(DISTINCT a.actor_id) FROM actor a;

SELECT SUM(p.amount) 
FROM payment_p2022_06 p 
WHERE p.payment_date >= '2022-06-01' AND p.payment_date < '2022-07-01';

SELECT COUNT(*) 
FROM rental 
WHERE rental_date >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 month' 
AND rental_date < DATE_TRUNC('month', CURRENT_DATE);

SELECT f.title, c.name 
FROM film f 
JOIN film_category fc ON f.film_id = fc.film_id 
JOIN category c ON fc.category_id = c.category_id;

SELECT a.first_name, a.last_name 
FROM actor a 
JOIN film_actor fa ON a.actor_id = fa.actor_id 
JOIN film f ON fa.film_id = f.film_id 
WHERE f.title ILIKE 'Inception';

SELECT c.first_name, c.last_name, f.title 
FROM customer c 
JOIN rental r ON c.customer_id = r.customer_id 
JOIN inventory i ON r.inventory_id = i.inventory_id 
JOIN film f ON i.film_id = f.film_id 
ORDER BY c.first_name, c.last_name, f.title;

SELECT s.staff_id, s.first_name, s.last_name, st.store_id, st.address_id
FROM staff s
JOIN store st ON s.store_id = st.store_id;

SELECT f.title
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN customer c ON r.customer_id = c.customer_id
WHERE c.first_name ILIKE 'John' AND c.last_name ILIKE 'Doe';

SELECT f.title, COUNT(r.rental_id) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 5;

SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r1 ON c.customer_id = r1.customer_id
JOIN inventory i1 ON r1.inventory_id = i1.inventory_id
JOIN store s1 ON i1.store_id = s1.store_id
JOIN rental r2 ON c.customer_id = r2.customer_id
JOIN inventory i2 ON r2.inventory_id = i2.inventory_id
JOIN store s2 ON i2.store_id = s2.store_id
WHERE s1.store_id = 1 AND s2.store_id = 2
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT s1.store_id) = 2;

SELECT a.actor_id, a.first_name, a.last_name
FROM actor a
JOIN (
  SELECT fa.actor_id
  FROM film_actor fa
  GROUP BY fa.actor_id
  HAVING COUNT(fa.film_id) > 10
) fa_count ON a.actor_id = fa_count.actor_id;

SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN (
  SELECT customer_id
  FROM payment
  GROUP BY customer_id
  HAVING COUNT(payment_id) > 5
) p ON c.customer_id = p.customer_id;

SELECT f.film_id, f.title
FROM film f
JOIN film_category fc1 ON f.film_id = fc1.film_id
JOIN category c1 ON fc1.category_id = c1.category_id
JOIN film_category fc2 ON f.film_id = fc2.film_id
JOIN category c2 ON fc2.category_id = c2.category_id
WHERE c1.name ILIKE 'Action' AND c2.name ILIKE 'Comedy';

SELECT r.rental_id, r.rental_date, r.inventory_id, r.customer_id, r.return_date, r.staff_id
FROM rental r
WHERE r.rental_date >= NOW() - INTERVAL '7 days';

SELECT p.payment_id, p.customer_id, p.staff_id, p.rental_id, p.amount, p.payment_date
FROM payment_p2022_02 p
WHERE p.payment_date >= '2022-02-01' AND p.payment_date < '2022-03-01'
UNION ALL
SELECT p.payment_id, p.customer_id, p.staff_id, p.rental_id, p.amount, p.payment_date
FROM payment p
WHERE p.payment_date >= '2022-02-01' AND p.payment_date < '2022-03-01';

SELECT f.film_id, f.title
FROM film f
LEFT JOIN inventory i ON f.film_id = i.film_id
LEFT JOIN rental r ON i.inventory_id = r.inventory_id
WHERE r.rental_id IS NULL OR r.rental_date < NOW() - INTERVAL '30 days';

SELECT c.customer_id, c.first_name, c.last_name, c.email, c.create_date
FROM customer c
WHERE c.create_date >= CURRENT_DATE - INTERVAL '6 months';

SELECT s.first_name, s.last_name
FROM staff s
JOIN store st ON s.store_id = st.store_id
WHERE s.last_update < '2020-01-01';

SELECT 
  a.first_name, 
  a.last_name, 
  (COUNT(DISTINCT fa.film_id) / (SELECT COUNT(*) FROM film)) * 100 AS percentage_of_films
FROM 
  actor a 
  JOIN film_actor fa ON a.actor_id = fa.actor_id 
GROUP BY 
  a.actor_id, 
  a.first_name, 
  a.last_name 
ORDER BY 
  percentage_of_films DESC;

SELECT c.customer_id, AVG(p.amount) 
FROM customer c 
JOIN payment p ON c.customer_id = p.customer_id 
GROUP BY c.customer_id;

SELECT a.actor_id, a.first_name, a.last_name
FROM actor a
WHERE a.actor_id IN (
  SELECT fa.actor_id
  FROM film_actor fa
  JOIN film f ON fa.film_id = f.film_id
  JOIN film_category fc ON f.film_id = fc.film_id
  GROUP BY fa.actor_id, fc.category_id
  HAVING COUNT(DISTINCT fc.category_id) = (SELECT COUNT(*) FROM category)
)

SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
WHERE c.customer_id IN (
  SELECT r.customer_id
  FROM rental r
  WHERE EXTRACT(YEAR FROM r.rental_date) = EXTRACT(YEAR FROM CURRENT_DATE)
  GROUP BY r.customer_id
  HAVING COUNT(DISTINCT r.rental_id) > (
    SELECT COUNT(DISTINCT r2.rental_id)
    FROM rental r2
    WHERE r2.customer_id = r.customer_id
    AND EXTRACT(YEAR FROM r2.rental_date) = EXTRACT(YEAR FROM CURRENT_DATE) - 1
  )
)

SELECT f.title, SUM(p.amount) AS revenue
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
JOIN payment p ON r.rental_id = p.rental_id
GROUP BY f.title
ORDER BY revenue DESC
LIMIT 5;

SELECT c.customer_id, c.first_name, c.last_name, 
       (SELECT COUNT(*) 
        FROM rental r 
        WHERE r.customer_id = c.customer_id 
        AND r.rental_date > NOW() - INTERVAL '1 month') AS this_month_rentals,
       (SELECT COUNT(*) 
        FROM rental r 
        WHERE r.customer_id = c.customer_id 
        AND r.rental_date > NOW() - INTERVAL '2 month' 
        AND r.rental_date <= NOW() - INTERVAL '1 month') AS last_month_rentals
FROM customer c;

SELECT c.first_name, c.last_name
FROM customer c
WHERE NOT EXISTS (
  SELECT 1
  FROM film_category fc
  JOIN film f ON fc.film_id = f.film_id
  WHERE fc.category_id = (
    SELECT category_id
    FROM category
    WHERE name ILIKE 'Action'
  ) AND NOT EXISTS (
    SELECT 1
    FROM rental r
    JOIN inventory i ON r.inventory_id = i.inventory_id
    WHERE i.film_id = f.film_id AND r.customer_id = c.customer_id
  )
);

SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN (
  SELECT r.customer_id, r.inventory_id, COUNT(r.rental_id) AS rental_count
  FROM rental r
  GROUP BY r.customer_id, r.inventory_id
  HAVING COUNT(r.rental_id) > 3
) AS sub ON c.customer_id = sub.customer_id
JOIN inventory i ON sub.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id;
